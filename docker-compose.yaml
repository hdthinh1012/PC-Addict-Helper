services:
  influxdb2:
    container_name: influxdb2-dev
    image: influxdb:2
    ports:
      - 8086:8086
    volumes:
      - influxdb2-data:/var/lib/influxdb2
      - influxdb2-config:/etc/influxdb2
    env_file:
      - .env
    entrypoint: [ "./entrypoint.sh" ]
    restart: on-failure:10
    networks:
      - backend

  grafana:
    image: grafana/grafana-oss:10.3.7
    volumes:
      - grafana-storage:/var/lib/grafana:rw
    depends_on:
      - influxdb2
    env_file:
      - .env
    ports:
      - 3001:3000
    networks:
      - backend

  telegraf:
    image: telegraf:1.19
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:rw
    env_file:
      - .env
    depends_on:
      - influxdb2
    networks:
      - backend

  postgres:
    container_name: postgres-dev
    build:
      context: ./postgres
      dockerfile: Dockerfile.dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=pc_addict_helper_db
      - POSTGRES_USER=hdthinh1012
      - POSTGRES_PASSWORD=10122001
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend

  nestjs:
    container_name: pc-addict-helper-nestjs-dev
    image: pc-addict-helper-nestjs-img:dev
    build:
      context: ./nestjs
      dockerfile: Dockerfile.dev
    environment:
      - INFLUXDB_URL=http://influxdb2:8086
      - POSTGRES_URL=postgres://hdthinh1012:10122001@postgres:5432/pc_addict_helper_db
      - POSTGRES_USER=hdthinh1012
      - POSTGRES_PASSWORD=10122001
      - POSTGRES_DB=pc_addict_helper_db
    # ports:
    #   - "3000:3000"
    volumes:
      - ./nestjs:/app
    networks:
      - backend

  golang:
    container_name: pc-addict-helper-golang-dev
    image: pc-addict-helper-golang-img:dev
    build:
      context: ./golang
      dockerfile: Dockerfile.dev
    volumes:
      - ./golang:/app
    ports:
      - 8000:8080
    networks:
      - backend

  angular:
    container_name: pc-addict-helper-angular-dev
    image: pc-addict-helper-angular-img:dev
    build:
      context: ./angular
      dockerfile: Dockerfile.dev
    ports:
      - "4200:4200"
    volumes:
      - ./angular:/usr/src/app
    networks:
      - frontend

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    image: pc-addict-helper-router:dev
    container_name: pc-addict-helper-router-dev
    restart: unless-stopped
    ports:
      - 8080:80
    volumes:
      - ./nginx/development.conf:/etc/nginx/conf.d/default.conf
    networks:
      - backend
      - frontend

volumes:
  influxdb2-data:
  influxdb2-config:
  postgres-data:
  grafana-storage:


networks:
  frontend:
    name: pc-addict-helper-network-frontend
    driver: bridge
  backend:
    name: pc-addict-helper-network-backend
    driver: bridge
